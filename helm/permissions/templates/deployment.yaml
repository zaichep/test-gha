apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "fullname" . }}
  labels:
    {{- include "labels" . | nindent 4 }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- with $.Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "selectorLabels" . | nindent 8 }}
        aadpodidbinding: {{ .Release.Namespace }}-identity
      namespace: {{ .Release.Namespace }}
    spec:
      serviceAccountName: {{ include "objectName" . | quote }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets: {{- toYaml . | nindent 8 }}
      {{- end }}
      dnsPolicy: {{ .Values.dnsPolicy | default "ClusterFirst" }}
      {{- with .Values.dnsConfig }}
      dnsConfig: {{- toYaml . | nindent 8}}
      {{- end }}
      containers:
        #################################################################
        - {{- include "common.csproxy" (list .) | nindent 10 }}
        #################################################################
        - name: permissions
          image: {{ printf "%s%s:%s" .Values.image.repository .Values.image.name (coalesce .Values.image.tag .Chart.AppVersion ) | quote }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          ports:
            - name: http
              containerPort: {{ .Values.app.options.httpPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
            failureThreshold: 5
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /health
              port: http
            failureThreshold: 5
            periodSeconds: 5
          env:
            - name: K8S_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: APP_NAME
              value: "pulse-permissions"
            - name: TENANT_SID
              value: {{ .Values.tenant.sid | quote }}
            - name: JAVA_OPTIONS
              value: {{ .Values.app.options.javaOpts | quote }}
            - name: CFG_HOST
              value: {{ if .Values.app.options.cfgHost }}{{ .Values.app.options.cfgHost | quote }}{{ else }}"localhost"{{ end }}
            - name: CFG_PORT
              value: {{ if .Values.app.options.cfgPort }}{{ .Values.app.options.cfgPort | quote }}{{ else }}{{ $.Values.csproxy.ports.default | quote }}{{ end }}
            - name: CFG_APP
              value: {{ .Values.app.options.cfgApp | quote }}
            - name: CFG_APP_TYPE
              value: {{ .Values.app.options.cfgAppType | quote }}
            - name: CFG_ADDP_LOCAL_TIMEOUT
              value: {{ .Values.app.options.dbAddpLocalTimeout | quote }}
            - name: CFG_ADDP_REMOTE_TIMEOUT
              value: {{ .Values.app.options.dbAddpRemoteTimeout | quote }}
            - name: LOG_LVL
              value: {{ .Values.app.options.logLevel | quote }}
            - name: CACHE_TIMEOUT
              value: {{ .Values.app.options.cacheTimeout | quote }}
            - name: CACHE_SIZE
              value: {{ .Values.app.options.cacheSize | quote }}
            - name: APPLICATION_KEY
              value: {{ .Values.tenant.sid | quote }}
            - name: HTTP_PORT
              value: {{ .Values.app.options.httpPort | quote }}
            - name: DB_POLLING_INTERVAL
              value: {{ .Values.app.options.dbPollingInterval | quote }}
            - name: DB_NAME
              value: {{ .Values.config.dbName | quote }}
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.config.postgresConfig }}
                  key: META_DB_HOST
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.config.postgresConfig }}
                  key: META_DB_PORT
            {{- if not .Values.config.mountSecrets }}
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.config.postgresSecret }}
                  key: META_DB_ADMIN
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.config.postgresSecret }}
                  key: META_DB_ADMINPWD
            {{- else}}
            {{- include "common.secrets.injectDBUser" "DB_USER_SECRET" | nindent 12 }}
            {{- include "common.secrets.injectDBPassword" "DB_PASSWORD_SECRET" | nindent 12 }}
            {{- end }}
            - name: DB_SSL_MODE
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.config.postgresConfig }}
                  key: META_DB_SSL_MODE
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.config.redisConfig }}
                  key: REDIS_HOST
            - name: REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.config.redisConfig }}
                  key: REDIS_PORT
            {{- if not .Values.config.mountSecrets }}
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.config.redisSecret }}
                  key: REDIS_KEY
            {{- else }}
            {{- include "common.secrets.injectRedisPassword" "REDIS_PASSWORD_SECRET" | nindent 12 }}
            {{- end }}
            - name: REDIS_ENABLE_SSL
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.config.redisConfig }}
                  key: REDIS_ENABLE_SSL
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            {{- if .Values.config.mountSecrets }}
            {{- include "common.secrets.teamSecretVolumeMount" . |  nindent 12 }}
            {{- end }}
            - name: logs
              mountPath: /data/log

      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- if .Values.affinity }}
      affinity: {{- toYaml .Values.affinity | nindent 8 }}
      {{- else }}
      {{- include "affinity" . | nindent 6 }}
      {{- end }}

      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      volumes:
      {{- if .Values.config.mountSecrets }}
      {{- include "common.secrets.teamSecretVolume" . |  nindent 6 }}
      {{- end }}
      - name: logs
        hostPath:
          path: /mnt/log
