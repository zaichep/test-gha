apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "pulse.fullname" . }}
  labels:
    {{- include "pulse.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "pulse.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "pulse.selectorLabels" . | nindent 8 }}
        aadpodidbinding: {{ .Release.Namespace }}-identity
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      dnsPolicy: {{ .Values.dnsPolicy | default "ClusterFirst" }}
      {{- with .Values.dnsConfig }}
      dnsConfig:
        {{- toYaml . | nindent 8}}
      {{- end }}
      serviceAccountName: {{ include "pulse.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ printf "%s%s:%s" .Values.image.repository .Values.image.name (coalesce .Values.image.tag .Chart.AppVersion ) | quote }}
          env: 
            - name: K8S_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: APP_NAME
              value: "pulse"
            - name: JAVA_OPTIONS
              value: {{ .Values.options.javaOpts | quote }}
            - name: APP_OPTIONS
              value: {{ .Values.options.appOpts | quote }}
            - name: PORT
              value: {{ .Values.options.port | quote }}
            - name: MANAGEMENT_PORT
              value: {{ .Values.options.managementPort | quote }}
            - name: CONTEXT
              value: {{ .Values.options.context | quote }}
            - name: MANAGEMENT_CONTEXT
              value: {{ .Values.options.managementContext | quote }}
            - name: INSTALL_TEMPLATES
              value: {{ .Values.options.installTemplates | quote }}
            - name: EDITABLE_TEMPLATES
              value: {{ .Values.options.editableTemplates | quote }}
            - name: HEALTH_EXPIRE_TIMEOUT
              value: {{ .Values.options.healthExpireTimeout | quote }}
            - name: MAX_WIDGETS_PER_USER
              value: {{ .Values.options.maxWidgetsPerUser | quote }}
            - name: MAX_TABS_PER_USER
              value: {{ .Values.options.maxTabsPerUser | quote }}
            {{- if not .Values.config.mountSecrets }}
            - name: CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.config.gwsSecret }}
                  key: clientId
            - name: CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.config.gwsSecret }}
                  key: clientSecret
            {{- else }}
            {{- include "common.secrets.injectClientId" "CLIENT_ID_SECRET" | nindent 12 }}
            {{- include "common.secrets.injectClientSecret" "CLIENT_SECRET_SECRET" | nindent 12 }}
            {{- end }}
            - name: GWS_URL
              value: {{ .Values.options.gwsUrl | quote }}
            - name: OBJECTS_SERVICE_URL
              value: "${GWS_URL}/provisioning/v3/configuration/objects"
            - name: AUTH_URL
              value: {{ .Values.options.authUrl | quote }}
            - name: AUTH_URL_INT
              value: {{ .Values.options.authUrlInt | quote }}
            - name: ACCESS_TOKEN_URL
              value: "${AUTH_URL_INT}/auth/v3/oauth/token"
            - name: USER_AUTH_URL
              value: "${AUTH_URL}/auth/v3/oauth/authorize"
            - name: USER_LOGOUT_URL
              value: "${AUTH_URL}/auth/v3/sign-out"
            - name: USER_INFO_URL
              value: "${AUTH_URL_INT}/auth/v3/userinfo"
            - name: USER_LOGOUT_GLOBAL
              value: {{ .Values.options.userLogoutGlobal | quote }}
            - name: USER_LOGOUT_REDIRECT_URL
              value: {{ .Values.options.userLogoutRedirectUrl | quote }}
            - name: FORCE_ORIGIN_REDIRECT
              value: {{ .Values.options.forceOriginRedirect | quote }}
            - name: DISABLE_DEFAULT_ACCOUNT
              value: {{ .Values.options.disableDefaultAccount | quote }}  
            - name: TOKEN_CACHE_TIMEOUT
              value: {{ .Values.options.tokenCacheTimeout | quote }}
            - name: TOKEN_CACHE_SIZE
              value: {{ .Values.options.tokenCacheSize | quote }}
            - name: DB_NAME
              value: {{ .Values.config.dbName | quote }}
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.config.postgresConfig }}
                  key: META_DB_HOST
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.config.postgresConfig }}
                  key: META_DB_PORT
            - name: DB_SSL_MODE
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.config.postgresConfig }}
                  key: META_DB_SSL_MODE
            {{- if not .Values.config.mountSecrets }}
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.config.postgresSecret }}
                  key: META_DB_ADMIN
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.config.postgresSecret }}
                  key: META_DB_ADMINPWD
            {{- else }}
            {{- include "common.secrets.injectDBUser" "DB_USER_SECRET" | nindent 12 }}
            {{- include "common.secrets.injectDBPassword" "DB_PASSWORD_SECRET" | nindent 12 }}
            {{- end }}
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.config.redisConfig }}
                  key: REDIS_HOST
            - name: REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.config.redisConfig }}
                  key: REDIS_PORT
            {{- if not .Values.config.mountSecrets }}
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.config.redisSecret }}
                  key: REDIS_KEY
            {{- else }}
            {{- include "common.secrets.injectRedisPassword" "REDIS_PASSWORD_SECRET" | nindent 12 }}
            {{- end }}
            - name: REDIS_ENABLE_SSL
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.config.redisConfig }}
                  key: REDIS_ENABLE_SSL
            - name: METRICS_TAGS_DEPLOYMENT_CODE
              value: {{ .Values.options.metricsTagsDeploymentCode | quote }}
            - name: METRICS_TAGS_APPLICATION_NAME
              value: {{ .Values.options.metricsTagsApplicationName | quote }}
            - name: ACCESS_LOG_APPEND
              value: {{ .Values.options.accessLogAppend | quote }}
            - name: ACCESS_LOG_ENABLE
              value: {{ .Values.options.accessLogEnable | quote }}
            - name: ACCESS_LOG_EXTENDED
              value: {{ .Values.options.accessLogExtended | quote }}
            - name: ACCESS_LOG_COOKIES
              value: {{ .Values.options.accessLogCookies | quote }}
            - name: ACCESS_LOG_LATENCY
              value: {{ .Values.options.accessLogLatency | quote }}
            - name: ACCESS_LOG_SERVER
              value: {{ .Values.options.accessLogServer | quote }}
            - name: ACCESS_LOG_RETENTION_PERIOD
              value: {{ .Values.options.accessLogRetentionPeriod | quote }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.options.port }}
              protocol: TCP
            - name: management-port
              containerPort: {{ .Values.options.managementPort }}
              protocol: TCP
          {{- if .Values.debug.enabled }}
            - name: debug-port
              containerPort: {{ .Values.debug.port }}
              protocol: TCP
          {{- end }}
          livenessProbe:
            httpGet:
              path: {{ .Values.options.managementContext }}/health/liveness
              port: management-port
            failureThreshold: 5
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: {{ .Values.options.managementContext }}/health/readiness
              port: management-port
            failureThreshold: 5
            periodSeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            {{- if .Values.config.mountSecrets }}
            {{- include "common.secrets.teamSecretVolumeMount" . | nindent 12 }}
            {{- include "common.secrets.gwsSecretVolumeMount"  . | nindent 12 }}
            {{- end }}
            - name: logs
              mountPath: /data/log

      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- if .Values.affinity }}
      affinity: {{- toYaml .Values.affinity | nindent 8 }}
      {{- else }}
      {{- include "pulse.affinity" . | nindent 6 }}
      {{- end }}

      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      volumes:
      {{- if .Values.config.mountSecrets }}
      {{- include "common.secrets.teamSecretVolume" . | nindent 6 }}
      {{- include "common.secrets.gwsSecretVolume"  . | nindent 6 }}
      {{- end }}
      - name: logs
        hostPath:
          path: /mnt/log
